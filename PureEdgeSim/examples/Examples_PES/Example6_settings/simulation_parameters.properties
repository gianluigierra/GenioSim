# Simulation Parameters File
simulation_time=10
parallel_simulation=true
update_interval=1
pause_length=3

display_real_time_charts=true
auto_close_real_time_charts=false
charts_update_interval=10
save_charts=false

length=200
width=200

edge_devices_range=20
edge_datacenters_coverage=200
        
enable_registry=true
registry_mode=CLOUD

enable_orchestrators=false 
deploy_orchestrator=MIST

wait_for_all_tasks=false

batch_size=100

save_log_file=false
clear_output_folder=false
deep_log_enabled=false

min_number_of_edge_devices=100
max_number_of_edge_devices=100
edge_device_counter_size=100

realistic_network_model=true
network_update_interval=1

one_shared_wan_network = true

# If true, the tasks bandwidth allocation is based on their associated application latency or cpu utilization
bandwidth_allocation_based_on_application_type = false
# Set the value for bandwidth allocation
# Options: LATENCY, MI
Allocation_value = LATENCY

wan_bandwidth = 1000
wan_latency = 0.06
wan_nanojoules_per_bit = 46.7 

man_bandwidth = 1000
man_latency = 0.01
man_nanojoules_per_bit = 0 

Fiber_bandwidth = 200
Fiber_latency = 0.01
Fiber_nanojoules_per_bit = 46.7

wifi_bandwidth = 1300
wifi_device_transmission_nanojoules_per_bit = 283.17
wifi_device_reception_nanojoules_per_bit = 137.01
wifi_access_point_transmission_nanojoules_per_bit = 23.8
wifi_access_point_reception_nanojoules_per_bit = 23.8
wifi_latency = 0.005

ethernet_bandwidth = 1000
ethernet_nanojoules_per_bit = 40
ethernet_latency = 0.002

cellular_bandwidth = 100
cellular_device_transmission_nanojoules_per_bit = 438.4
cellular_device_reception_nanojoules_per_bit = 51.97
cellular_base_station_nanojoules_per_bit_up_link = 6200
cellular_base_station_nanojoules_per_bit_down_link = 20500
cellular_latency = 0.03

orchestration_architectures = CLOUD_ONLY

# The orchestration algorithm, use ',' for multiple values  
orchestration_algorithms = TRADE_OFF

#if the algorithm is DQN i suggest you to set the speed at wich the neural network is updated. This value
#changes both the rate at which epsilon is valuated and the rate at which  the network is updated.
#Values such as '1' represent the fastest, decreasing the speed of update with higher numbers.
neural_network_learning_speed = 1

#down are the parameters to set for the neural network in the current simulation
neural_training = false
network_batch_size = 16
gamma = 0.99
epsilon = 1
epsilon_min = 0.01
epsilon_decay = 0.99
learning_rate = 0.0001 